flekspy.plot.streamplot
=======================

.. py:module:: flekspy.plot.streamplot

.. autoapi-nested-parse::

   Streamline plotting for 2D vector fields.



Functions
---------

.. autoapisummary::

   flekspy.plot.streamplot.streamplot


Module Contents
---------------

.. py:function:: streamplot(axes, x, y, u, v, density=1, linewidth=None, color=None, cmap=None, norm=None, arrowsize=1, arrowstyle='-|>', minlength=0.1, transform=None, zorder=None, start_points=None, maxlength=4.0, integration_direction='both')

   Draw streamlines of a vector flow.

   :param x: An evenly spaced grid.
   :type x: 1D arrays
   :param y: An evenly spaced grid.
   :type y: 1D arrays
   :param u: *x* and *y*-velocities. The number of rows and columns must match
             the length of *y* and *x*, respectively.
   :type u: 2D arrays
   :param v: *x* and *y*-velocities. The number of rows and columns must match
             the length of *y* and *x*, respectively.
   :type v: 2D arrays
   :param density: Controls the closeness of streamlines. When ``density = 1``, the domain
                   is divided into a 30x30 grid. *density* linearly scales this grid.
                   Each cell in the grid can have, at most, one traversing streamline.
                   For different densities in each direction, use a tuple
                   (density_x, density_y).
   :type density: float or (float, float)
   :param linewidth: The width of the stream lines. With a 2D array the line width can be
                     varied across the grid. The array must have the same shape as *u*
                     and *v*.
   :type linewidth: float or 2D array
   :param color: The streamline color. If given an array, its values are converted to
                 colors using *cmap* and *norm*.  The array must have the same shape
                 as *u* and *v*.
   :type color: color or 2D array
   :param cmap: Colormap used to plot streamlines and arrows. This is only used if
                *color* is an array.
   :type cmap: `~matplotlib.colors.Colormap`
   :param norm: Normalize object used to scale luminance data to 0, 1. If ``None``,
                stretch (min, max) to (0, 1). This is only used if *color* is an array.
   :type norm: `~matplotlib.colors.Normalize`
   :param arrowsize: Scaling factor for the arrow size.
   :type arrowsize: float
   :param arrowstyle: Arrow style specification.
                      See `~matplotlib.patches.FancyArrowPatch`.
   :type arrowstyle: str
   :param minlength: Minimum length of streamline in axes coordinates.
   :type minlength: float
   :param start_points: Coordinates of starting points for the streamlines in data coordinates
                        (the same coordinates as the *x* and *y* arrays).
   :type start_points: Nx2 array
   :param zorder: The zorder of the stream lines and arrows.
                  Artists with lower zorder values are drawn first.
   :type zorder: int
   :param maxlength: Maximum length of streamline in axes coordinates.
   :type maxlength: float
   :param integration_direction: Integrate the streamline in forward, backward or both directions.
   :type integration_direction: {'forward', 'backward', 'both'}, default: 'both'

   :returns: Container object with attributes

             - ``lines``: `.LineCollection` of streamlines

             - ``arrows``: `.PatchCollection` containing `.FancyArrowPatch`
               objects representing the arrows half-way along stream lines.

             This container will probably change in the future to allow changes
             to the colormap, alpha, etc. for both lines and arrows, but these
             changes should be backward compatible.
   :rtype: StreamplotSet


